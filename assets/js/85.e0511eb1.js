(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{586:function(t,a,s){"use strict";s.r(a);var r=s(16),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"左程云课程学习路线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#左程云课程学习路线"}},[t._v("#")]),t._v(" 左程云课程学习路线")]),t._v(" "),s("p",[t._v("第一步，体系班1-40必看，41-47可暂缓，后续必须看懂。第二步，进阶班49-78 （leetcode高频）")]),t._v(" "),s("h3",{attrs:{id:"常数时间操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常数时间操作"}},[t._v("#")]),t._v(" 常数时间操作")]),t._v(" "),s("p",[t._v("固定时间操作，只要运算的类型是一样的，不管多复杂，计算时间相等，因为位数相同。")]),t._v(" "),s("p",[t._v("数组的寻址操作也是固定时间的，寻找第200万位跟800万位的索引所耗费的时间是差不多的。")]),t._v(" "),s("p",[t._v("单链表的寻址是非固定时间的，越后面的寻址耗费时间越长。")]),t._v(" "),s("h3",{attrs:{id:"复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂度"}},[t._v("#")]),t._v(" 复杂度")]),t._v(" "),s("p",[t._v("只考虑最高阶。")]),t._v(" "),s("p",[t._v("如果两个算法的最高阶相同，进行比较时需要进行常数项的比较，方法就是放弃理论分析，生成随机数据直接测。如，生成100万个随机数进行10000次比较等。")]),t._v(" "),s("h3",{attrs:{id:"额外空间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#额外空间复杂度"}},[t._v("#")]),t._v(" 额外空间复杂度")]),t._v(" "),s("p",[t._v("开辟的变量或空间的个数，如果只是有限个变量就是N(1)")]),t._v(" "),s("h3",{attrs:{id:"对数器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对数器"}},[t._v("#")]),t._v(" 对数器")]),t._v(" "),s("p",[t._v("模拟生成随机数，将自己的方法与其他正确的方法进行比较，发现自己代码的错误")])])}),[],!1,null,null,null);a.default=e.exports}}]);