(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{518:function(t,a,v){"use strict";v.r(a);var s=v(16),_=Object(s.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"前端工程化发展历史"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端工程化发展历史"}},[t._v("#")]),t._v(" 前端工程化发展历史")]),t._v(" "),v("h3",{attrs:{id:"时间线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#时间线"}},[t._v("#")]),t._v(" 时间线")]),t._v(" "),v("ol",[v("li",[t._v("1995年 Brendan Eich发明Javascript（标志前端开发的诞生）")]),t._v(" "),v("li",[t._v("2005年 Ajax(Asynchronous Javascript And XML) 广泛应用")]),t._v(" "),v("li",[t._v("2008年V8引擎发布(标志着JS能够脱离浏览器使用)")]),t._v(" "),v("li",[t._v("2009年 Node.js发布(前端工程化进展有了飞跃)")]),t._v(" "),v("li",[t._v("2010年Npm0.1版本发布（标志着前端工程化正式诞生）")]),t._v(" "),v("li",[t._v("2013年 Webpack 1.0版本发布（标志着现在的开发模式开始形成）")]),t._v(" "),v("li",[t._v("2013年 React 1.0版本发布（标志着前端进入MVVM开发模式）")]),t._v(" "),v("li",[t._v("2014年 Vue 1.0版本发布（标志着前端进入MVVM开发模式）")])]),t._v(" "),v("h3",{attrs:{id:"进化过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进化过程"}},[t._v("#")]),t._v(" 进化过程")]),t._v(" "),v("ol",[v("li",[t._v("前后端混合 (1995~2005) : 服务端染，javascript仅实现交互")]),t._v(" "),v("li",[t._v("前后端分离 (2005~2013) 借助aiax实现前后端分离、SPA等新模式")]),t._v(" "),v("li",[t._v("模块化开发 (2013~2014) npm管理模块、Webpack编译打包资源")]),t._v(" "),v("li",[t._v("模块化+MVVM（2014~至今）基于React或Vue，开发html成为历史")])]),t._v(" "),v("h3",{attrs:{id:"开发模式变化图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#开发模式变化图"}},[t._v("#")]),t._v(" 开发模式变化图")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://fastly.jsdelivr.net/gh/Amadeus9029/ViliviliBlogImg@gh-pages/frontEnd/20221124233749.png",alt:"image-20221124105925282"}})]),t._v(" "),v("p",[t._v("第一个版本模型，主要依赖于Tomcat、Apache等服务器后端请求前端资源，前端资源无法访问后端资源。")]),t._v(" "),v("p",[t._v("第二个版本，有了Ajax技术，能够实现前后端分离了，前端能够访问后端API，浏览器直接请求前端资源即可。")]),t._v(" "),v("p",[t._v("第三个版本，在前后端分离的基础上，对前端进行了工程化改进，使用Webpack将前端所有的资源打包成bundle.js文件。")]),t._v(" "),v("p",[t._v("第四个版本，在工程化的基础上，引入了Vue等框架，不再需要直接编写原生html，而是转向了Vue等框架的组件开发。")]),t._v(" "),v("h3",{attrs:{id:"前端研发图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端研发图"}},[t._v("#")]),t._v(" 前端研发图")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://fastly.jsdelivr.net/gh/Amadeus9029/ViliviliBlogImg@gh-pages/frontEnd/20221124233759.png",alt:"image-20221124111535130"}})]),t._v(" "),v("h3",{attrs:{id:"前端工程化解决的问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端工程化解决的问题"}},[t._v("#")]),t._v(" 前端工程化解决的问题")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://fastly.jsdelivr.net/gh/Amadeus9029/ViliviliBlogImg@gh-pages/frontEnd/20221124233807.png",alt:"image-20221124112321010"}})]),t._v(" "),v("p",[v("strong",[t._v("工程化核心目标：效率、规范、性能")])]),t._v(" "),v("p",[t._v("前端工程化中的工具及作用")]),t._v(" "),v("ol",[v("li",[t._v("Babel将高版本ES6\\7的JS代码降级为ES5，兼容各个浏览器（提升开发效率）")]),t._v(" "),v("li",[t._v("Eslint对代码进行规范检查（解决规范问题）")])]),t._v(" "),v("p",[t._v("Webpack在前端工程化中的作用")]),t._v(" "),v("p",[t._v("​\t将JS代码模块化。第一，解决JS全局作用域冲突问题，防止自身JS代码、第三方JS代码之间变量的作用域冲突。（提升开发效率）第二，打包成了一个bundle.js文件对资源进行了合并和压缩，浏览器不再需要多次发送请求，只需一个请求即可。（解决性能问题）")])])}),[],!1,null,null,null);a.default=_.exports}}]);